plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "String", "BASIC_AUTH_USER", "\"${getBasicAuthUser()}\""
        buildConfigField "String", "BASIC_AUTH_PASSWORD", "\"${getBasicAuthPassword()}\""
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

def getBasicAuthUser() {
    String user = System.getenv("BASIC_AUTH_USER")

    if (user == null) {
        println "BASIC AUTH USER NOT FOUND IN THE ENVIRONMENT"

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        user = properties.getProperty("basicauth.user")

        if (user == null)
            println "BASIC AUTH USER NOT FOUND IN THE PROPERTIES FILE"
    }

    return user
}

def getBasicAuthPassword() {
    String password = System.getenv("BASIC_AUTH_PASSWORD")

    if (password == null) {
        println "BASIC AUTH PASSWORD NOT FOUND IN THE ENVIRONMENT"

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        password = properties.getProperty("basicauth.password")

        if (password == null)
            println "BASIC AUTH PASSWORD NOT FOUND IN THE PROPERTIES FILE"
    }

    return password
}

dependencies {

    implementation project(path: ':core')

    // DEPENDENCY INJECTION
    implementation Dependencies.hiltAndroid
    kapt Dependencies.hiltCompiler

    // For instrumentation tests
    androidTestImplementation Dependencies.hiltAndroidTesting
    kaptAndroidTest Dependencies.hiltCompiler

    // For local unit tests
    testImplementation Dependencies.hiltAndroidTesting
    kaptTest Dependencies.hiltCompiler

    //COROUTINES
    implementation Dependencies.coroutines

    implementation Dependencies.okhttp
    implementation Dependencies.okhttpLoggingInterceptor
    api Dependencies.retrofit
    implementation Dependencies.retrofitConverterScalars
}