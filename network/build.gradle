plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "String", "BASIC_AUTH_USER", "\"${getBasicAuthUser()}\""
        buildConfigField "String", "BASIC_AUTH_PASSWORD", "\"${getBasicAuthPassword()}\""
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

def getBasicAuthUser() {
    String user = System.getenv("BASIC_AUTH_USER")

    if (user == null) {
        println "BASIC AUTH USER NOT FOUND IN THE ENVIRONMENT"

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        user = properties.getProperty("basicauth.user")

        if (user == null)
            println "BASIC AUTH USER NOT FOUND IN THE PROPERTIES FILE"
    }

    return user
}

def getBasicAuthPassword() {
    String password = System.getenv("BASIC_AUTH_PASSWORD")

    if (password == null) {
        println "BASIC AUTH PASSWORD NOT FOUND IN THE ENVIRONMENT"

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        password = properties.getProperty("basicauth.password")

        if (password == null)
            println "BASIC AUTH PASSWORD NOT FOUND IN THE PROPERTIES FILE"
    }

    return password
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation project(path: ':core')

    // DEPENDENCY INJECTION
    implementation 'com.google.dagger:hilt-android:2.40'
    kapt 'com.google.dagger:hilt-compiler:2.40'

    // For instrumentation tests
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.40'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.40'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.40'
    kaptTest 'com.google.dagger:hilt-compiler:2.40'

    //COROUTINES
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    api 'com.squareup.okhttp3:okhttp:4.9.1'
    api 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-scalars:2.9.0'
}